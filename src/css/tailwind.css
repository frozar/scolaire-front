@tailwind base;
@tailwind components;
@tailwind utilities;

@layer components {
  /* btn */
  .btn {
    display: inline-flex;
    flex-shrink: 0;
    cursor: pointer;
    user-select: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    border-color: transparent;
    border-color: hsl(var(--n) / var(--tw-border-opacity));
    text-align: center;
    transition-property: color, background-color, border-color,
      text-decoration-color, fill, stroke, opacity, box-shadow, transform,
      filter, backdrop-filter;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    border-radius: var(--rounded-btn, 0.5rem);
    height: 3rem /* 48px */;
    padding-left: 1rem /* 16px */;
    padding-right: 1rem /* 16px */;
    font-size: 0.875rem /* 14px */;
    line-height: 1.25rem /* 20px */;
    line-height: 1em;
    min-height: 3rem /* 48px */;
    font-weight: 600;
    text-transform: uppercase;
    text-transform: var(--btn-text-case, uppercase);
    text-decoration-line: none;
    text-decoration-line: none;
    border-width: var(--border-btn, 1px);
    animation: button-pop var(--animation-btn, 0.25s) ease-out;
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--nc) / var(--tw-text-opacity));
  }
  .btn-disabled,
  .btn[disabled] {
    pointer-events: none;
  }
  .btn.loading,
  .btn.loading:hover {
    pointer-events: none;
  }
  .btn.loading,
  .btn.loading:hover {
    pointer-events: none;
  }
  .btn.loading:before {
    margin-right: 0.5rem /* 8px */;
    height: 1rem /* 16px */;
    width: 1rem /* 16px */;
    border-radius: 9999px;
    border-width: 2px;
    animation: spin 2s linear infinite;
    content: "";
    border-top-color: transparent;
    border-left-color: transparent;
    border-bottom-color: currentColor;
    border-right-color: currentColor;
  }
  @media (prefers-reduced-motion: reduce) {
    .btn.loading:before {
      animation: spin 10s linear infinite;
    }
  }
  .btn-group > input[type="radio"].btn {
    appearance: none;
  }
  .btn-group > input[type="radio"].btn:before {
    content: attr(data-title);
  }
  .btn:active:hover,
  .btn:active:focus {
    animation: none;
    transform: scale(var(--btn-focus-scale, 0.95));
  }
  .btn:active:hover,
  .btn:active:focus {
    animation: none;
    transform: scale(var(--btn-focus-scale, 0.95));
  }
  .btn:hover,
  .btn-active {
    --tw-border-opacity: 1;
    border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--nf, var(--n)) / var(--tw-bg-opacity));
  }
  .btn:focus-visible {
    outline: 2px solid hsl(var(--nf));
    outline-offset: 2px;
  }
  .btn.glass:hover,
  .btn.glass.btn-active {
    --glass-opacity: 25%;
    --glass-border-opacity: 15%;
  }
  .btn.glass:hover,
  .btn.glass.btn-active {
    --glass-opacity: 25%;
    --glass-border-opacity: 15%;
  }
  .btn.glass:focus-visible {
    outline: 2px solid currentColor;
  }
  .btn-disabled,
  .btn-disabled:hover,
  .btn[disabled],
  .btn[disabled]:hover {
    --tw-border-opacity: 0;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.2;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: 0.2;
  }
  .btn-disabled,
  .btn-disabled:hover,
  .btn[disabled],
  .btn[disabled]:hover {
    --tw-border-opacity: 0;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.2;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: 0.2;
  }
  .btn.loading.btn-square:before,
  .btn.loading.btn-circle:before {
    margin-right: 0px;
  }
  .btn.loading.btn-square:before,
  .btn.loading.btn-circle:before {
    margin-right: 0px;
  }
  .btn.loading.btn-xl:before,
  .btn.loading.btn-lg:before {
    height: 1.25rem /* 20px */;
    width: 1.25rem /* 20px */;
  }
  .btn.loading.btn-xl:before,
  .btn.loading.btn-lg:before {
    height: 1.25rem /* 20px */;
    width: 1.25rem /* 20px */;
  }
  .btn.loading.btn-sm:before,
  .btn.loading.btn-xs:before {
    height: 0.75rem /* 12px */;
    width: 0.75rem /* 12px */;
  }
  .btn.loading.btn-sm:before,
  .btn.loading.btn-xs:before {
    height: 0.75rem /* 12px */;
    width: 0.75rem /* 12px */;
  }
  .btn-group > input[type="radio"]:checked.btn,
  .btn-group > .btn-active {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity));
  }
  .btn-group > input[type="radio"]:checked.btn:focus-visible,
  .btn-group > .btn-active:focus-visible {
    outline: 2px solid hsl(var(--p));
  }
  .btn-group .btn:not(:first-child):not(:last-child),
  .btn-group.btn-group-horizontal .btn:not(:first-child):not(:last-child) {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  }
  .btn-group .btn:not(:first-child):not(:last-child),
  .btn-group.btn-group-horizontal .btn:not(:first-child):not(:last-child) {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  }
  .btn-group .btn:first-child:not(:last-child),
  .btn-group.btn-group-horizontal .btn:first-child:not(:last-child) {
    margin-left: -1px;
    margin-top: -0px;
    border-top-left-radius: var(--rounded-btn, 0.5rem);
    border-top-right-radius: 0;
    border-bottom-left-radius: var(--rounded-btn, 0.5rem);
    border-bottom-right-radius: 0;
  }
  .btn-group .btn:first-child:not(:last-child),
  .btn-group.btn-group-horizontal .btn:first-child:not(:last-child) {
    margin-left: -1px;
    margin-top: -0px;
    border-top-left-radius: var(--rounded-btn, 0.5rem);
    border-top-right-radius: 0;
    border-bottom-left-radius: var(--rounded-btn, 0.5rem);
    border-bottom-right-radius: 0;
  }
  .btn-group .btn:last-child:not(:first-child),
  .btn-group.btn-group-horizontal .btn:last-child:not(:first-child) {
    border-top-left-radius: 0;
    border-top-right-radius: var(--rounded-btn, 0.5rem);
    border-bottom-left-radius: 0;
    border-bottom-right-radius: var(--rounded-btn, 0.5rem);
  }
  .btn-group .btn:last-child:not(:first-child),
  .btn-group.btn-group-horizontal .btn:last-child:not(:first-child) {
    border-top-left-radius: 0;
    border-top-right-radius: var(--rounded-btn, 0.5rem);
    border-bottom-left-radius: 0;
    border-bottom-right-radius: var(--rounded-btn, 0.5rem);
  }
  .btn-group.btn-group-vertical .btn:first-child:not(:last-child) {
    margin-left: -0px;
    margin-top: -1px;
    border-top-left-radius: var(--rounded-btn, 0.5rem);
    border-top-right-radius: var(--rounded-btn, 0.5rem);
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  }
  .btn-group.btn-group-vertical .btn:last-child:not(:first-child) {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-left-radius: var(--rounded-btn, 0.5rem);
    border-bottom-right-radius: var(--rounded-btn, 0.5rem);
  }
  /* btn-circle */
  .btn-circle {
    height: 3rem /* 48px */;
    width: 3rem /* 48px */;
    border-radius: 9999px;
    padding: 0px;
  }
  .btn.loading.btn-square:before,
  .btn.loading.btn-circle:before {
    margin-right: 0px;
  }
  .btn-circle:where(.btn-xs) {
    height: 1.5rem /* 24px */;
    width: 1.5rem /* 24px */;
    border-radius: 9999px;
    padding: 0px;
  }
  .btn-circle:where(.btn-sm) {
    height: 2rem /* 32px */;
    width: 2rem /* 32px */;
    border-radius: 9999px;
    padding: 0px;
  }
  .btn-circle:where(.btn-md) {
    height: 3rem /* 48px */;
    width: 3rem /* 48px */;
    border-radius: 9999px;
    padding: 0px;
  }
  .btn-circle:where(.btn-lg) {
    height: 4rem /* 64px */;
    width: 4rem /* 64px */;
    border-radius: 9999px;
    padding: 0px;
  }
  /* card */
  .card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem);
  }
  .card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
  .card figure {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .card.image-full {
    display: grid;
  }
  .card.image-full:before {
    position: relative;
    content: "";
    z-index: 10;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    opacity: 0.75;
    border-radius: var(--rounded-box, 1rem);
  }
  .card.image-full:before,
  .card.image-full > * {
    grid-column-start: 1;
    grid-row-start: 1;
  }
  .card.image-full:before,
  .card.image-full > * {
    grid-column-start: 1;
    grid-row-start: 1;
  }
  .card.image-full > figure img {
    height: 100%;
    object-fit: cover;
  }
  .card.image-full > .card-body {
    position: relative;
    z-index: 20;
    --tw-text-opacity: 1;
    color: hsl(var(--nc) / var(--tw-text-opacity));
  }
  .card :where(figure:first-child) {
    overflow: hidden;
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-start-radius: unset;
    border-end-end-radius: unset;
  }
  .card :where(figure:last-child) {
    overflow: hidden;
    border-start-start-radius: unset;
    border-start-end-radius: unset;
    border-end-start-radius: inherit;
    border-end-end-radius: inherit;
  }
  .card:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px;
  }
  .card.bordered {
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
  }
  .card.compact .card-body {
    padding: 1rem /* 16px */;
    font-size: 0.875rem /* 14px */;
    line-height: 1.25rem /* 20px */;
  }
  .card.image-full :where(figure) {
    overflow: hidden;
    border-radius: inherit;
  }
  /* tabs */
  .tabs {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-end;
  }
  /* menu */
  .menu {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
  }
  .menu.horizontal {
    display: inline-flex;
    flex-direction: row;
  }
  .menu.horizontal :where(li) {
    flex-direction: row;
  }
  :where(.menu li) {
    position: relative;
    display: flex;
    flex-shrink: 0;
    flex-direction: column;
    flex-wrap: wrap;
    align-items: stretch;
  }
  .menu :where(li:not(.menu-title)) > :where(*:not(ul)) {
    display: flex;
  }
  .menu :where(li:not(.disabled):not(.menu-title)) > :where(*:not(ul)) {
    cursor: pointer;
    user-select: none;
    align-items: center;
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
  .menu > :where(li > *:not(ul):focus) {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
  .menu > :where(li.disabled > *:not(ul):focus) {
    cursor: auto;
  }
  .menu > :where(li) :where(ul) {
    display: flex;
    flex-direction: column;
    align-items: stretch;
  }
  .menu > :where(li) > :where(ul) {
    position: absolute;
    display: none;
    top: initial;
    left: 100%;
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
  }
  .menu > :where(li:hover) > :where(ul) {
    display: flex;
  }
  .menu > :where(li:focus) > :where(ul) {
    display: flex;
  }
  .menu.horizontal li.bordered > a,
  .menu.horizontal li.bordered > button,
  .menu.horizontal li.bordered > span {
    border-left-width: 0px;
    border-bottom-width: 4px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
  }
  .menu.horizontal li.bordered > a,
  .menu.horizontal li.bordered > button,
  .menu.horizontal li.bordered > span {
    border-left-width: 0px;
    border-bottom-width: 4px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
  }
  .menu.horizontal li.bordered > a,
  .menu.horizontal li.bordered > button,
  .menu.horizontal li.bordered > span {
    border-left-width: 0px;
    border-bottom-width: 4px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
  }
  .menu[class*=" px-"]:not(.menu[class*=" px-0"]) li > *,
  .menu[class^="px-"]:not(.menu[class^="px-0"]) li > *,
  .menu[class*=" p-"]:not(.menu[class*=" p-0"]) li > *,
  .menu[class^="p-"]:not(.menu[class^="p-0"]) li > * {
    border-radius: var(--rounded-btn, 0.5rem);
  }
  .menu[class*=" px-"]:not(.menu[class*=" px-0"]) li > *,
  .menu[class^="px-"]:not(.menu[class^="px-0"]) li > *,
  .menu[class*=" p-"]:not(.menu[class*=" p-0"]) li > *,
  .menu[class^="p-"]:not(.menu[class^="p-0"]) li > * {
    border-radius: var(--rounded-btn, 0.5rem);
  }
  .menu[class*=" px-"]:not(.menu[class*=" px-0"]) li > *,
  .menu[class^="px-"]:not(.menu[class^="px-0"]) li > *,
  .menu[class*=" p-"]:not(.menu[class*=" p-0"]) li > *,
  .menu[class^="p-"]:not(.menu[class^="p-0"]) li > * {
    border-radius: var(--rounded-btn, 0.5rem);
  }
  .menu[class*=" px-"]:not(.menu[class*=" px-0"]) li > *,
  .menu[class^="px-"]:not(.menu[class^="px-0"]) li > *,
  .menu[class*=" p-"]:not(.menu[class*=" p-0"]) li > *,
  .menu[class^="p-"]:not(.menu[class^="p-0"]) li > * {
    border-radius: var(--rounded-btn, 0.5rem);
  }
  .menu :where(li.bordered > *) {
    border-left-width: 4px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
  }
  .menu :where(li) > :where(*:not(ul)) {
    gap: 0.75rem /* 12px */;
    padding-left: 1rem /* 16px */;
    padding-right: 1rem /* 16px */;
    padding-top: 0.75rem /* 12px */;
    padding-bottom: 0.75rem /* 12px */;
    color: currentColor;
  }
  .menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):focus),
  .menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):hover) {
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.1;
  }
  .menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):focus),
  .menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):hover) {
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.1;
  }
  .menu :where(li:not(.menu-title):not(:empty)) > :where(:not(ul).active),
  .menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):active) {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity));
  }
  .menu :where(li:not(.menu-title):not(:empty)) > :where(:not(ul).active),
  .menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):active) {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity));
  }
  .menu :where(li:empty) {
    margin-left: 1rem /* 16px */;
    margin-right: 1rem /* 16px */;
    margin-top: 0.5rem /* 8px */;
    margin-bottom: 0.5rem /* 8px */;
    height: 1px;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.1;
  }
  .menu li.disabled > * {
    user-select: none;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: 0.2;
  }
  .menu li.disabled > *:hover {
    background-color: transparent;
  }
  .menu li.hover-bordered a {
    border-left-width: 4px;
    border-color: transparent;
  }
  .menu li.hover-bordered a:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
  }
  .menu.compact li > a,
  .menu.compact li > span {
    padding-top: 0.5rem /* 8px */;
    padding-bottom: 0.5rem /* 8px */;
    font-size: 0.875rem /* 14px */;
    line-height: 1.25rem /* 20px */;
  }
  .menu.compact li > a,
  .menu.compact li > span {
    padding-top: 0.5rem /* 8px */;
    padding-bottom: 0.5rem /* 8px */;
    font-size: 0.875rem /* 14px */;
    line-height: 1.25rem /* 20px */;
  }
  .menu .menu-title > * {
    padding-top: 0.25rem /* 4px */;
    padding-bottom: 0.25rem /* 4px */;
    font-size: 0.75rem /* 12px */;
    line-height: 1rem /* 16px */;
    font-weight: 700;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: 0.4;
  }
  .menu :where(li:not(.disabled)) > :where(*:not(ul)) {
    outline: 2px solid transparent;
    outline-offset: 2px;
    transition-property: color, background-color, border-color,
      text-decoration-color, fill, stroke, opacity, box-shadow, transform,
      filter, backdrop-filter;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
  .menu > :where(li:first-child) {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: unset;
    border-bottom-left-radius: unset;
  }
  .menu > :where(li:first-child) > :where(:not(ul)) {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: unset;
    border-bottom-left-radius: unset;
  }
  .menu > :where(li:last-child) {
    border-top-left-radius: unset;
    border-top-right-radius: unset;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
  }
  .menu > :where(li:last-child) > :where(:not(ul)) {
    border-top-left-radius: unset;
    border-top-right-radius: unset;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
  }
  .menu > :where(li) > :where(ul) :where(li) {
    width: 100%;
    white-space: nowrap;
  }
  .menu > :where(li) > :where(ul) :where(li) :where(ul) {
    padding-left: 1rem /* 16px */;
  }
  .menu > :where(li) > :where(ul) :where(li) > :where(:not(ul)) {
    width: 100%;
    white-space: nowrap;
  }
  .menu > :where(li) > :where(ul) > :where(li:first-child) {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: unset;
    border-bottom-left-radius: unset;
  }
  .menu > :where(li) > :where(ul) > :where(li:first-child) > :where(:not(ul)) {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: unset;
    border-bottom-left-radius: unset;
  }
  .menu > :where(li) > :where(ul) > :where(li:last-child) {
    border-top-left-radius: unset;
    border-top-right-radius: unset;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
  }
  .menu > :where(li) > :where(ul) > :where(li:last-child) > :where(:not(ul)) {
    border-top-left-radius: unset;
    border-top-right-radius: unset;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
  }
  /* bg-base-100 */
  .bg-base-100 {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity));
  }
  /* rounded-box */
  .rounded-box {
    border-radius: var(--rounded-box, 1rem);
  }
}
